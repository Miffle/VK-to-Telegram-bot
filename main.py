import telebot
import vk_api
from telebot import types
import datebase_def
import Info
import last_message

bot = telebot.TeleBot(Info.TGbot_token, parse_mode=None)
markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
itembtn1 = types.KeyboardButton('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π')
itembtn2 = types.KeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')
itembtn3 = types.KeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è')
itembtn4 = types.KeyboardButton('–ü–æ–º–æ—â—å')
markup.add(itembtn1, itembtn2, itembtn4)
markup1.add(itembtn1, itembtn3, itembtn4)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, –¥—É–º–∞—é, —á—Ç–æ —Ç—ã —É–∂–µ –∑–Ω–∞–µ—à—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –Ω–æ,"
                     " –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–º–æ—â—å' üòÑ\n"
                     "–ù–∞—á–Ω—É —Å—Ä–∞–∑—É, –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω —Ç–≤–æ–π API –∫–ª—é—á, —Å–æ–æ–±—â–µ–Ω–∏—è —è —É —Å–µ–±—è –Ω–µ –¥–µ—Ä–∂—É –∏ –¥–∞–∂–µ –∏—Ö –Ω–µ –≤–∏–∂—É\n"
                     "–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤ - \n<span class='tg-spoiler'>https://oauth.vk.com/authorize?"
                     "client_id=6121396&scope=593920&redirect_uri=https://oauth.vk.com/blank.html&display=page&response"
                     "_type=token&revoke=1</span>\n\n\n"
                     "<b>–ì–∞–π–¥ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é api:</b>\n"
                     "1) –ü–µ—Ä–µ—Ö–æ–¥–∏—à—å –ø–æ —Å—Å—ã–ª–∫–µ —Å–≤–µ—Ä—Ö—É\n"
                     "2) –û–∑–Ω–∞–∫–∞–º–ª–∏–≤–∞–µ—à—å—Å—è –∏ –Ω–∞–∂–∏–º–∞–µ—à—å '–†–∞–∑—Ä–µ—à–∏—Ç—å'\n"
                     "3) –ö–æ–ø–∏—Ä—É–µ—à—å —á–∞—Å—Ç—å –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –æ—Ç <u>access_token=</u> –¥–æ <u>&expires_in</u>"
                     " –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å –º–Ω–µ\n"
                     "–î–ª—è –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ - –Ω–∞–∂–º–∏ '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'",
                     reply_markup=markup,
                     parse_mode="HTML")


@bot.message_handler(content_types=['text'])
def support(message):
    if message.chat.type == 'private':
        if message.text == '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è':
            send = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ API –∫–ª—é—á", reply_markup=markup)
            bot.register_next_step_handler(send, get_api)
        elif message.text == '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è':
            bot.send_message(Info.chat_id, "–û—á–µ–Ω—å –∂–∞–ª—å, –µ—Å–ª–∏ —á—Ç–æ, —Ç–æ —è –≤—Å–µ–≥–¥–∞ —Ç—É—Ç", reply_markup=markup)
            datebase_def.unsubscribe(message.chat.id)


        elif message.text == '–ü–æ–º–æ—â—å':
            bot.send_message(message.chat_id, "lalalala", reply_markup=markup)
        elif message.text == '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π':
            sub = datebase_def.sub_check(message.chat.id)
            if sub == True:
                token = datebase_def.api_check(message.chat.id)
                session = vk_api.VkApi(token=token)
                vk = session.get_api()
                last_message.get_last_message(session, 10, bot, markup, message.chat.id)
            else:
                bot.send_message(message.chat.id, "–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –∏ –Ω–µ –ø—Ä–∏—Å–ª–∞–ª —Ç–æ–∫–µ–Ω!")


@bot.message_handler(content_types=['text'])
def get_api(message):
    if len(message.text) > 15:
        userid = message.chat.id
        vk_user_api = message.text
        datebase_def.insert_in_db(userid, vk_user_api)
        bot.send_message(message.chat.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!", reply_markup=markup1)


if __name__ == "__main__":
    bot.infinity_polling()
